@using System;
@using System.Web;
@using System.Text.Json;
@using System.Linq;
@using PassleSync.Core.Extensions;
@using PassleSync.Core.Models.Content.Umbraco;
@using PassleSync.Website.ViewModels;
@inherits Umbraco.Web.Mvc.UmbracoViewPage<PassleAuthorViewModel>
@{
    Layout = "Layout.cshtml";

    var firstName = Model.PassleName.Split(' ').First();
}

<article class="mb-8">
	<div class="flex flex-col gap-12">
		<div class="flex max-w-6xl w-full mx-auto">
			<div class="w-1/3">
				<div class="flex flex-col gap-12">
					<div class="-ml-4 w-[calc(100%+theme(spacing.4))] relative aspect-square">
						<img class="w-full aspect-square object-cover border border-gray-300 absolute top-6 left-4" src="@Model.AvatarUrl" alt="@Model.PassleName" />
						<div class="absolute top-full -rotate-90 font-bodoni uppercase text-right origin-bottom-right -right-2 leading-none text-7xl text-gray-300 select-none whitespace-nowrap">@firstName</div>
					</div>
					<div class="pl-8 flex flex-col gap-12">
                        <div class="flex gap-8 text-3xl mt-8">
                            @if (!string.IsNullOrEmpty(Model.TwitterScreenName))
                             {
                                <a href="https://twitter.com/@Model.TwitterScreenName" target="_blank" rel="noopener noreferrer">
                                    <i class="fab fa-twitter"></i>
                                </a>
                             }

                            @if (!string.IsNullOrEmpty(Model.LinkedInProfileLink))
                             {
                                <a href="https://@Model.LinkedInProfileLink" target="_blank" rel="noopener noreferrer">
                                    <i class="fab fa-linkedin-in"></i>
                                </a>
                             }
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Location) || !string.IsNullOrEmpty(Model.EmailAddress))
                         {
                            <div class="flex flex-col gap-6">
                                @if (!string.IsNullOrEmpty(Model.Location))
                                {
                                    <div class="flex gap-4 text-xl font-semibold items-center">
                                        <i class="fas fa-map-marker-alt text-xl w-4"></i>
                                        @Model.Location
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(Model.EmailAddress))
                                {
                                    <div class="flex gap-4 text-xl font-semibold items-center">
                                        <i class="fas fa-envelope text-xl w-4"></i>
                                        @Model.EmailAddress
                                    </div>
                                }
                            </div>
                         }

                        @foreach (var link in Model.PersonalLinks)
                         {
                            <a class="flex gap-4 text-xl font-semibold text-primary" href="@link.Url" target="_blank" rel="noopener noreferrer">
                                <span>@link.Title</span>
                                <span>⟶</span>
                            </a>
                         }
					</div>
				</div>
			</div>
            <div class="w-2/3 bg-white border-t-4 border-primary min-h-[48rem] px-20 py-12">
                <h1 class="text-5xl font-extrabold mb-6 font-bodoni">@Model.PassleName</h1>
                @if (!string.IsNullOrEmpty(Model.RoleInfo))
                {
                    <div class="text-2xl font-bodoni mb-4">@Model.RoleInfo</div>
                }

                <div class="w-14 border-b-4 border-primary mb-14"></div>

                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <div class="text-2xl font-bodoni font-bold mb-4">About me</div>
                    <div class="post-content text-lg">
                        @Html.Raw(Model.Description)
                    </div>
                }
            </div>
		</div>

        @if (Model.AuthorPosts.Any())
        {
		    <div class="px-20 py-12 max-w-6xl mx-auto w-full bg-white">
			    <div class="flex flex-col items-center gap-8">
				    <div class="flex items-center gap-4">
					    <div class="w-14 border-b-4 border-primary"></div>
					    <div class="text-2xl font-semibold font-bodoni">
						    @firstName's Posts
					    </div>
					    <div class="w-14 border-b-4 border-primary"></div>
				    </div>
                    <div class="grid grid-cols-2 gap-6 w-full">
                        @foreach (var post in Model.AuthorPosts)
                        {
                            @Html.Partial("Partials/PasslePost", post)
                        }
                    </div>
			    </div>
		    </div>
        }
	</div>
</article>

@*<div class="page-container">
    <div class="page-subnav">
        <div class="breadcrumb">
            <a href="/">All Posts</a>  >  <span>Team</span>
        </div>
        <div class="search-bar-container">
            <i class="fas fa-search"></i>
            <input class="search-bar" type="text" placeholder="Search for posts or authors" />
        </div>
    </div>
    <div class="page-body profile-page">
        <div class="profile-picture-container">
            <div class="profile-picture">
                <img src="@Model.AvatarUrl">
            </div>
            <div class="below-profile-picture">
                <div class="profile-links">
                    <div class="profile-social-links">
                        @if (!string.IsNullOrEmpty(Model.TwitterScreenName))
                        {
                            <a class="profile-social-twitter" href="https://twitter.com/@Model.TwitterScreenName" target="_blank" rel="noreferrer noopener">
                                <i class="fab fa-twitter"></i>
                            </a>
                        }
                        @if (!string.IsNullOrEmpty(Model.LinkedInProfileLink))
                        {
                            <a class="profile-social-linkedin" href="https://@Model.LinkedInProfileLink" target="_blank" rel="noreferrer noopener">
                                <i class="fab fa-linkedin-in"></i>
                            </a>
                        }
                    </div>
                    <div class="profile-personal-info">
                        @if (!string.IsNullOrEmpty(Model.Location))
                        {
                            <div class="profile-location">
                                <i class="fas fa-map-marker-alt"></i>
                                <span>@Model.Location</span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.EmailAddress))
                        {
                            <div class="profile-email">
                                <i class="fas fa-envelope"></i>
                                <span>@(Model.EmailAddress)</span>
                            </div>
                        }
                    </div>
                </div>
                <div class="profile-name-stylistic">
                    @(Model.FirstName.ToUpper())
                </div>
            </div>
        </div>
        <div class="profile-data">
            <div class="profile-subscribe">
                @if (!string.IsNullOrEmpty(Model.SubscribeUrl))
                {
                    <a class="button" id="author-subscribe" href="@Model.SubscribeUrl" target="_blank" rel="noreferrer noopener">
                        <svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 53.78 45.94">
                            <circle class="cls-1" cx="31.4" cy="8.11" r="4.93"></circle>
                            <circle class="cls-1" cx="14.95" cy="18.99" r="4.93" transform="translate(-6.19 30.7) rotate(-80.78)"></circle>
                            <path class="cls-2" d="M40,15.8a14.89,14.89,0,0,0-3.17-1.69,8.11,8.11,0,1,0-10.92,0l-.66.27A15,15,0,0,0,22.47,16L23,19.65A11.94,11.94,0,0,1,38.2,18.41,1.59,1.59,0,0,0,40,15.8ZM31.4,13a4.93,4.93,0,1,1,4.93-4.92A4.93,4.93,0,0,1,31.4,13Z"></path>
                            <path class="cls-3" d="M15,10.88A8.1,8.1,0,0,0,9.46,25,15.33,15.33,0,0,0,.23,34.46a4.77,4.77,0,0,0,4.54,6.23H18.6a1.59,1.59,0,1,0,0-3.17H4.77a1.6,1.6,0,0,1-1.51-2.08,12.26,12.26,0,0,1,11.65-8.3,11.92,11.92,0,0,1,6.84,2.14,1.59,1.59,0,1,0,1.82-2.6A15.39,15.39,0,0,0,20.4,25,8.07,8.07,0,0,0,23,19.65L22.47,16A8.12,8.12,0,0,0,15,10.88Zm0,13A4.93,4.93,0,1,1,19.88,19,4.93,4.93,0,0,1,15,23.91Z"></path>
                            <path class="cls-2" d="M51.14,45.94a2.19,2.19,0,0,0,1.49-.56L45.4,38.14c-.18.12-.35.24-.5.36q-.82.6-1.32.93a8.33,8.33,0,0,1-1.35.69,4.15,4.15,0,0,1-1.57.35h0a4.14,4.14,0,0,1-1.56-.35,7.93,7.93,0,0,1-1.35-.69q-.51-.33-1.32-.93l-.5-.36-7.24,7.24a2.22,2.22,0,0,0,1.5.56Zm.3,0"></path>
                            <path class="cls-2" d="M28.88,33.17a7.94,7.94,0,0,1-1.49-1.27V43.22L34,36.66c-1.32-.91-3-2.08-5.08-3.49Zm.11,0"></path>
                            <path class="cls-2" d="M52.2,33.17c-2,1.36-3.69,2.52-5.09,3.5l6.56,6.55V31.9a7.91,7.91,0,0,1-1.47,1.27Zm.12,0"></path>
                            <path class="cls-2" d="M51.44,25.14H29.86a2.09,2.09,0,0,0-1.74.76,3,3,0,0,0-.61,1.91,3.43,3.43,0,0,0,.81,2A7.36,7.36,0,0,0,30,31.5l3,2.09,2.36,1.64,1.48,1,.22.15.4.3.79.55.77.48a4.41,4.41,0,0,0,.84.39,2.34,2.34,0,0,0,.73.14h0a2.34,2.34,0,0,0,.74-.14,4.41,4.41,0,0,0,.84-.39l.76-.48.79-.55.41-.3.22-.15,1.48-1,5.38-3.74a7.12,7.12,0,0,0,1.79-1.8,3.84,3.84,0,0,0,.71-2.21,2.26,2.26,0,0,0-.69-1.66,2.28,2.28,0,0,0-1.65-.69Zm0,.1"></path>
                        </svg>
                        <span>Subscribe</span>
                    </a>
                }
            </div>
            <div class="profile-name">
                <h1 id="name">@Model.PassleName</h1>
            </div>
            <div class="profile-role">
                <h3>@Model.RoleInfo</h3>
            </div>
            <div class="profile-header-separator"></div>
            <div class="about-me">
                <h3>About me</h3>
                @Html.Raw(Model.Description)
            </div>
        </div>
    </div>
    <div class="full-width-container">
        <div class="author-posts">
            <div class="author-posts-header">
                <h3>@Model.FirstName's Posts</h3>
            </div>
            @foreach (var post in Model.AuthorPosts.Take(4))
            {
                <a class="post" href="@post.Url()">
                    <img src="@(post.Value<string>("imageUrl"))" />
                    <div class="post-image-overlay"></div>
                    <div>
                        <h3>@(post.Value<string>("postTitle").Truncate())</h3>
                        <h4 class="post-date">@(DateTime.Parse(post.Value<string>("publishedDate")).ToString("dd MMMM yyyy"))</h4>
                        <span class="post-preview">@Html.Raw(post.Value<string>("ContentTextSnippet"))</span>
                    </div>
                </a>
            }
        </div>
    </div>
</div>*@